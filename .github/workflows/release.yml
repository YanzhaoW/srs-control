name: release
on:
  push:
    branches:
      - dev

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      build_type: ${{ steps.build.outputs.build_type }}

    steps:
      - name: Define envs
        run:
          echo "CMAKE_BUILD_TYPE=Release" >> $GITHUB_ENV
      - name: Setup build type
        id: build
        run: |
          echo "build_type=${CMAKE_BUILD_TYPE}" >> $GITHUB_OUTPUT

  build-artifacts:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    needs: setup
    env:
      CC: clang
      CXX: clang++ -stdlib=libc++
      CMAKE_GENERATOR: Ninja
    container:
      image: silkeh/clang:19-bookworm
    steps:
      - name: system install
        run: |
          apt-get update
          apt-get install --fix-missing -y git zlib1g zlib1g-dev wget
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: 'true'
      - name: recover envs
        run: |
          echo "CMAKE_BUILD_TYPE=${{ needs.setup.outputs.build_type }}" >> $GITHUB_ENV
          cd $GITHUB_WORKSPACE/..
          echo "PARENT_DIR=$PWD" >> $GITHUB_ENV
      - name: install mini-conda
        run: |
          mkdir -p ${PARENT_DIR}/miniconda3
          wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ${PARENT_DIR}/miniconda3/miniconda.sh
          bash ${PARENT_DIR}/miniconda3/miniconda.sh -b -u -p ${PARENT_DIR}/miniconda3
          rm ${PARENT_DIR}/miniconda3/miniconda.sh
      - name: install deps
        run: |
          source $PARENT_DIR/miniconda3/bin/activate
          cd $PARENT_DIR
          conda env create -f $GITHUB_WORKSPACE/static_env.yml
          conda activate srs-static
          source $GITHUB_WORKSPACE/utils/install_deps/debian_bookworm.sh
      - name: build
        run: |
          source $PARENT_DIR/miniconda3/bin/activate
          conda activate srs-static
          pwd
          ls -a
          mkdir ${PARENT_DIR}/srs-install
          cmake --preset static -DCMAKE_PREFIX_PATH=${PARENT_DIR}/deps-install -DCMAKE_INSTALL_PREFIX=${PARENT_DIR}/srs-install
          cmake --build ./build --target install -- -j2

      - uses: actions/upload-artifact@v4
        with:
          name: srs_control
          path: ${{env.PARENT_DIR}}/srs-install
          retention-days: 1

